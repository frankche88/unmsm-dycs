buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    classpath 'com.bmuschko:gradle-docker-plugin:3.0.7'
  }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'application'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.bmuschko.docker-remote-api'

version "0.1-SNAPSHOT"

mainClassName = "unmsm.dycs.App"

run {
  args += ['server', './src/main/resources/config.yaml']
  //args += ['db', 'migrate', './src/main/resources/config.yaml']
}

task migrate (type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "unmsm.dycs.App"
  args "db", "migrate", './src/main/resources/config.yaml' 
}

task dumpdata (type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "unmsm.dycs.App"
  args "db", "dump", '-o', './changeset.xml', '--data', './src/main/resources/config.yaml' 
}

//java -jar orders/build/libs/service.jar db dump -o ./changeset.xml --data  orders/src/main/resources/config.yaml


shadowJar {
  baseName = 'service'
  classifier = null
  version = null

  mergeServiceFiles()
  exclude 'META-INF/*.SF'
  exclude 'META-INF/*.DSA'
  exclude 'META-INF/*.RSA'
}

jar {
  manifest {
    attributes 'Main-Class': mainClassName
  }
}

docker {
  registryCredentials {
    username = (System.getenv('DOCKER_BUILDER_USERNAME') ?: (project.hasProperty('dockerRegistryUsername') ? dockerRegistryUsername : '')) ?: ''
    password = (System.getenv('DOCKER_BUILDER_PASSWORD') ?: (project.hasProperty('dockerRegistryPassword') ? dockerRegistryPassword : '')) ?: ''
  }
}

dependencies {
  def modules = [
    'core',
    'client',
    'migrations',
    'hibernate'
  ]

  modules.each { module ->
    compile "io.dropwizard:dropwizard-${ module }:1.3.7"
  }
  
  compile group: 'com.smoketurner', name: 'dropwizard-swagger', version: '1.3.7-1'
    
  compile 'ru.vyarus:dropwizard-guicey:4.2.1'
  
  compile group: 'org.modelmapper', name: 'modelmapper', version: '2.3.0'
    
  compile 'io.jsonwebtoken:jjwt:0.9.0'
  
  compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.42'
    
  compile group: 'com.h2database', name: 'h2', version: '1.4.197'
  
  compile group: 'org.postgresql', name: 'postgresql', version: '42.2.5'
  
  compile 'com.rabbitmq:amqp-client:5.4.3'

  compile project(':app-security')

  // Use JUnit test framework
  testImplementation 'junit:junit:4.12'
}

repositories {
 jcenter()
  mavenCentral()
}


task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile) {
  destFile = project.file('build/libs/Dockerfile')
  from 'openjdk:8u171-jre-slim'
  maintainer 'UNMSM-DYCS "frank.jonislla@unmsm.edu.pe"'
  copyFile 'service.jar', '/opt/service.jar'

  exposePort 8080
  entryPoint 'java', "-Djava.awt.headless=true", "-Xms256m", "-Xmx256m", '-jar', '/opt/service.jar', 'server', '/opt/config.yaml'
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
  dependsOn createDockerfile
  inputDir = createDockerfile.destFile.parentFile
  tag = "unmsm/curso-dycs-2018-2-orders:${project.version}".toLowerCase()
}

task pushImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
  dependsOn buildImage
  imageName = buildImage.tag
}

createDockerfile.dependsOn shadowJar

