server:
  applicationConnectors:
  - type: http
    port: ${PORT}
  adminConnectors:
  - type: http
    port: ${ADMINPORT}
#JWT
jwt:
  tokenKey: ${JWT_TOKEN_KEY}
  issuer: ${JWT_ISSUER}
  audience: ${JWT_AUDIENCE}
#,app.movies.api.controller,banking.oauth.api.controller
swagger:
  resourcePackage: unmsm.dycs.orders.application.controllers 
  schemes:
    - http
amqp:
  mqUrl: ${AMQ_URL}
  queue: ${AMQ_QUEUE}
firebase: 
  url: https://fcm.googleapis.com/fcm/send
  key: AIzaSyBn6w8KiDpB6Fm3UPq4qzVjewjhrurRqZ0
  receiver: "dO7j0zRnQWw:  APA91bFTSHJd0l1GNcsuQ3yplRqMRWM7C_nC431OFn1Dvo6ee4xUwzYyl8cBw18X6qvegA35eaN1tR83y28Z_zbbJP0Zo3F_oy0JwsqC34QTZlP_WyGtsma00hHa8JNuSg1oawlUb7bS"
database:
  # the username
  user: ${DB_USERNAME}
  # the password
  password: ${DB_PASSWORD}
  # the name of your JDBC driver
  driverClass: ${JDBC_DRIVER}
  # the JDBC URL
  url: ${JDBC_URL}
  # any properties specific to your JDBC driver:
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.MySQLDialect
    hibernate.show_sql: true
    org.hibernate.type: true
    hibernate.generate_statistics: false
    hibernate.hbm2ddl.auto: validate
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s
  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"
  # the timeout before a connection validation queries fail
  validationQueryTimeout: 3s
  # the minimum number of connections to keep open
  minSize: 2
  initialSize: 2
  # the maximum number of connections to keep open
  maxSize: 4
  # whether or not idle connections should be validated
  checkConnectionWhileIdle: true
  checkConnectionOnBorrow: true
  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s
  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute
